{"version":3,"sources":["Header.js","Card.js","App.js","index.js"],"names":["Header","props","score","highScore","Card","className","src","catpicture","alt","catname","App","useState","name","picture","cats","setCats","clickedCats","setClickedCats","setScore","setHighScore","useEffect","randomizeCats","randomizeArray","array","length","numbers","Math","floor","random","j","k","some","i","push","randomizeRange","map","id","onClick","cat","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAYeA,G,MAVA,SAACC,GACd,OACE,6BACE,+CACA,8CAAoBA,EAAMC,OAC1B,4CAAkBD,EAAME,cCIfC,G,MARF,SAACH,GACZ,OACE,yBAAKI,UAAU,QACb,yBAAKA,UAAU,cAAcC,IAAKL,EAAMM,WAAYC,IAAKP,EAAMQ,aCsEtDC,EAvEH,WAAO,IAAD,EACQC,mBAAS,CAC/B,CAAEC,KAAM,MAAOC,QAAS,WACxB,CAAED,KAAM,QAASC,QAAS,aAC1B,CAAED,KAAM,UAAWC,QAAS,eAC5B,CAAED,KAAM,WAAYC,QAAS,gBAC7B,CAAED,KAAM,UAAWC,QAAS,eAC5B,CAAED,KAAM,SAAUC,QAAS,cAC3B,CAAED,KAAM,QAASC,QAAS,aAC1B,CAAED,KAAM,SAAUC,QAAS,cAC3B,CAAED,KAAM,OAAQC,QAAS,YACzB,CAAED,KAAM,MAAOC,QAAS,aAXV,mBACTC,EADS,KACHC,EADG,OAasBJ,mBAAS,IAb/B,mBAaTK,EAbS,KAaIC,EAbJ,OAcUN,mBAAS,GAdnB,mBAcTT,EAdS,KAcFgB,EAdE,OAekBP,mBAAS,GAf3B,mBAeTR,EAfS,KAeEgB,EAfF,KA2BhBC,qBAAU,WACRC,MACC,IACH,IAAMA,EAAgB,WACpBN,EAAQO,EAAeR,KAEnBQ,EAAiB,SAACC,GAEtB,OAnBqB,SAACC,GAGtB,IAFA,IAAIC,EAAU,CAACC,KAAKC,MAAMD,KAAKE,SAAWJ,IACtCK,EAAIH,KAAKC,MAAMD,KAAKE,SAAWJ,GAC1BM,EAAI,EAAGA,EAAIN,EAAS,EAAGM,IAAK,CACnC,KAAOL,EAAQM,MAAK,SAACC,GAAD,OAAOA,IAAMH,MAC/BA,EAAIH,KAAKC,MAAMD,KAAKE,SAAWJ,GAEjCC,EAAQQ,KAAKJ,GAEf,OAAOJ,EASaS,CAAeX,EAAMC,QACtBW,KAAI,SAACH,GAAD,OAAOT,EAAMS,OA4BtC,OACE,6BACE,kBAAC,EAAD,CAAQ9B,MAAOA,EAAOC,UAAWA,IACjC,yBAAKiC,GAAG,QAhBHtB,EAAKqB,KAAI,SAACH,GACf,OACE,yBACEK,QAAS,WAhBG,IAACC,IAiBCN,EAAEpB,KAhBlBI,EAAYe,MAAK,SAACC,GAAD,OAAOM,IAAQN,MAClCf,EAAe,IACXf,EAAQC,GACVgB,EAAajB,GAEfgB,EAAS,KAETD,EAAeD,EAAYuB,OAAOD,IAClCpB,EAAShB,EAAQ,IASXmB,MAGF,kBAAC,EAAD,CAAMZ,QAASuB,EAAEpB,KAAML,WAAYyB,EAAEnB,iBC1D/C2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.07347932.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      <h1>Cat Memory Game</h1>\n      <h2>Current Score: {props.score}</h2>\n      <h2>High Score : {props.highScore}</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\">\n      <img className=\"cat-picture\" src={props.catpicture} alt={props.catname} />\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Card from \"./Card\";\n\nconst App = () => {\n  const [cats, setCats] = useState([\n    { name: \"Ann\", picture: \"Ann.jpg\" },\n    { name: \"Daisy\", picture: \"Daisy.jpg\" },\n    { name: \"Juniper\", picture: \"Juniper.jpg\" },\n    { name: \"Koshenya\", picture: \"Koshenya.jpg\" },\n    { name: \"Pebbles\", picture: \"Pebbles.jpg\" },\n    { name: \"Punkle\", picture: \"Punkle.JPG\" },\n    { name: \"Storm\", picture: \"Storm.jpg\" },\n    { name: \"Supurr\", picture: \"Supurr.jpg\" },\n    { name: \"Yang\", picture: \"Yang.jpg\" },\n    { name: \"Yin\", picture: \"Yin.jpg\" },\n  ]);\n  const [clickedCats, setClickedCats] = useState([]);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const randomizeRange = (length) => {\n    let numbers = [Math.floor(Math.random() * length)];\n    let j = Math.floor(Math.random() * length);\n    for (let k = 0; k < length - 1; k++) {\n      while (numbers.some((i) => i === j)) {\n        j = Math.floor(Math.random() * length);\n      }\n      numbers.push(j);\n    }\n    return numbers;\n  };\n  useEffect(() => {\n    randomizeCats();\n  }, []);\n  const randomizeCats = () => {\n    setCats(randomizeArray(cats));\n  };\n  const randomizeArray = (array) => {\n    const randomIndex = randomizeRange(array.length);\n    return randomIndex.map((i) => array[i]);\n  };\n  const checkClicks = (cat) => {\n    if (clickedCats.some((i) => cat === i)) {\n      setClickedCats([]);\n      if (score > highScore) {\n        setHighScore(score);\n      }\n      setScore(0);\n    } else {\n      setClickedCats(clickedCats.concat(cat));\n      setScore(score + 1);\n    }\n  };\n  const renderCats = () => {\n    return cats.map((i) => {\n      return (\n        <div\n          onClick={() => {\n            checkClicks(i.name);\n            randomizeCats();\n          }}\n        >\n          <Card catname={i.name} catpicture={i.picture} />\n        </div>\n      );\n    });\n  };\n  return (\n    <div>\n      <Header score={score} highScore={highScore} />\n      <div id=\"cats\">{renderCats()}</div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}